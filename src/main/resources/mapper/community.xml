<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codebee.stylehive.community">

	<sql id="commSelect">
		select
		c.comm_no commNo,
		c.user_id userId,
		c.comm_title commTitle,
		c.comm_contents commContents,
		c.comm_category commCategory,
		c.comm_viewer commViewer,
		c.comm_date commDate,
		c.comm_update commUpdate,
		c.comm_state commState,
		(select count(comm_ment_no) from community_comment where c.comm_no = comm_no) commentCount,
		(select count(comm_like_id) from community_like where c.comm_no = comm_no) likeCount,
		u.user_img userImg
	</sql>
	
	<sql id="commJoin">
		left join community_tag_product ctp on c.comm_no = ctp.comm_no
		left join user_info u on c.user_id = u.user_id
	</sql>

	<select id="selectById" resultType="community" parameterType="int">
		select
		c.comm_no commNo,
		c.user_id userId,
		c.comm_title commTitle,
		c.comm_contents commContents,
		c.comm_category commCategory,
		c.comm_viewer commViewer,
		c.comm_date commDate,
		c.comm_update commUpdate,
		c.comm_state commState,
		(select count(*) from community_comment cc where cc.comm_no = c.comm_no) commentCount,
		(select count(*) from community_like cl where cl.comm_no = c.comm_no) likeCount,
		u.user_img userImg
		from community c
		left join user_info u on c.user_id = u.user_id
		where c.comm_no = #{id}
	</select>


	<select id="selectByProductId" resultType="community" parameterType="map">
		<include refid="commSelect"></include>
		from community c
		<include refid="commJoin"></include>
		where ctp.product_id = #{productId}
		order by c.comm_date desc
		limit #{startLimit}, #{sizeLimit}
	</select>

	<select id="countByProductId" resultType="int" parameterType="int">
		select
		count(c.comm_no)
		from community c
		left join community_tag_product ctp on c.comm_no = ctp.comm_no
		where ctp.product_id = #{productId}
	</select>

	<select id="selectProductCateCount" resultType="int" parameterType="int">
		select
		count(c.comm_no)
		from community c
		<include refid="commJoin"></include>
		left join product p on ctp.product_id = p.product_id
		where p.product_cate_id = #{cateId}
	</select>

	<select id="selectProductCate" resultType="community" parameterType="map">
		<include refid="commSelect"></include>
		from community c
		<include refid="commJoin"></include>
		left join product p on ctp.product_id = p.product_id
		where p.product_cate_id = #{cateId}
		group by commNo
		limit #{startLimit}, #{sizeLimit}
	</select>

	<select id="selectProductBigCateCount" resultType="int" parameterType="java.util.List">
		select
		count(c.comm_no)
		from community c
		<include refid="commJoin"></include>
		left join product p on ctp.product_id = p.product_id
		left join product_cate pc on p.product_cate_id = pc.product_cate_id
		left join product_big_cate pbc on pc.product_big_cate_id = pbc.product_big_cate_id
		<where>
			pbc.product_big_cate_id IN
			<foreach item="i" collection="list" open="(" separator="," close=")">
				#{i}
			</foreach>
		</where>
	</select>

	<select id="selectProductBigCate" resultType="community" parameterType="map">
		<include refid="commSelect"></include>
		from community c
		<include refid="commJoin"></include>
		left join product p on ctp.product_id = p.product_id
		left join product_cate pc on p.product_cate_id = pc.product_cate_id
		left join product_big_cate pbc on pc.product_big_cate_id = pbc.product_big_cate_id
		<where>
			pbc.product_big_cate_id IN
			<foreach item="i" collection="cateId" open="(" separator="," close=")">
				#{i}
			</foreach>
		</where>
		group by commNo
		limit #{startLimit}, #{sizeLimit}
	</select>

	<select id="countByTagId" resultType="int" parameterType="java.util.List">
		select
		count(*)
		from
		(
			select c.comm_no
			from community c
			<include refid="commJoin"></include>
			left join product p on ctp.product_id = p.product_id
			left join product_cate pc on p.product_cate_id = pc.product_cate_id
			join comm_tag ct on c.comm_no = ct.comm_no
			<where>
				ct.tag_id IN
				<foreach item="i" collection="list" open="(" separator="," close=")">
					#{i}
				</foreach>
			</where>
			group by c.comm_no
		) r
	</select>


	<select id="selectByTagId" resultType="community" parameterType="map">
		<include refid="commSelect"></include>
		from community c
		<include refid="commJoin"></include>
		left join product p on ctp.product_id = p.product_id
		left join product_cate pc on p.product_cate_id = pc.product_cate_id
		join comm_tag ct on c.comm_no = ct.comm_no
		<where>
			ct.tag_id IN
			<foreach item="i" collection="tagId" open="(" separator="," close=")">
				#{i}
			</foreach>
		</where>
		group by c.comm_no
		limit #{startLimit}, #{sizeLimit}
	</select>

	<select id="selectImgById" resultType="imgThumb" parameterType="int">
		select img_thumb_id imgThumbId, comm_no commNo, img_thumb_url imgThumbUrl, img_thumb_store imgThumbStore from img_thumb
		where comm_no = #{id}
	</select>

	<select id="selectTagProductById" resultType="product" parameterType="int">
		select
		p.product_id productId,
		pb.product_brand_eng_name productBrandEngName,
		(select img_thumb_url from img_thumb where product_id = productId limit 1) imgUrl,
		p.product_eng_name productEngName,
		pt.tender_price nowBuyPrice
		from community_tag_product ctp
		join product p on p.product_id = ctp.product_id
		join product_brand pb on pb.product_brand_id = p.product_brand_id
		left join (select tender_price, product_id from product_tender pt where tender_flag = 1 order by tender_price asc limit 1) pt on ctp.product_id = pt.product_id
		where ctp.comm_no = #{id}
	</select>

	<select id="selectUserOrderByFollowCount" resultType="user" parameterType="map">
		select
		u.user_id userId,
		u.user_img userImg,
		(select count(uf.user_id) from user_follow uf where u.user_id = uf.user_id2) followCount
		from user_info u
		order by followCount desc
		limit #{startLimit} , #{sizeLimit}
	</select>

	<select id="selectSummCommByUserId" resultType="community" parameterType="String">
		select
		c.comm_no commNo,
		(select count(comm_like_id) from community_like cl where cl.comm_no = c.comm_no) likeCount,
		(select it.img_thumb_url from img_thumb it where it.comm_no = c.comm_no limit 1) firstImage
		from community c
		where c.user_id = #{userId}
		order by c.comm_date desc
		limit 3
	</select>

	<select id="selectTagByCommId" resultType="tag" parameterType="int">
		select t.tag_id tagId, t.tag_name tagName
		from comm_tag ct
		join tag t on ct.tag_id = t.tag_id
		where ct.comm_no = #{commNo}
	</select>

	<select id="selectBestTag" resultType="tag" parameterType="int">
		select
		t.tag_id tagId,
		t.tag_name tagName,
		(select count(ct.tag_id) from comm_tag ct where ct.tag_id = t.tag_id) tagCount
		from tag t
		order by tagCount desc
		limit #{limit}
	</select>


	<sql id="commentBycommIdCondition">
		where cc.comm_no = #{commId} and
		cc.comm_ment_group_no is null and
		cc.comm_ment_state = 1
	</sql>
	<select id="selectCommentByCommId" resultType="commComment" parameterType="map">
		select
		cc.*,
		u.user_img userImg
		from community_comment cc
		join user_info u on cc.user_id = u.user_id
		<include refid="commentBycommIdCondition"></include>
		order by cc.comm_ment_date desc
		limit #{startLimit} , #{sizeLimit}
	</select>

	<select id="selectCommentByCommIdCount" resultType="int" parameterType="int">
		select count(comm_no)
		from community_comment cc
		<include refid="commentBycommIdCondition"></include>
	</select>

	<select id="selectNestedComment" resultType="commComment" parameterType="int">
		select
		cc.*,
		u.user_img userImg
		from community_comment cc
		join user_info u on cc.user_id = u.user_id
		where cc.comm_ment_group_no = #{mentNo} and cc.comm_ment_state = 1
		order by cc.comm_ment_date desc
	</select>

	<select id="selectCommUserById" resultType="user" parameterType="String">
		select
		u.user_id,
		u.user_name,
		u.user_nickname,
		u.user_introduce,
		u.user_img,
		(select count(*) from user_follow uf where uf.user_id = u.user_id) followCount,
		(select count(*) from user_follow uf where uf.user_id2 = u.user_id) followedCount,
		(select count(*) from community c where c.user_id = u.user_id) communityCount,
		(select count(*) from community_tag_product ctp join community cc on ctp.comm_no = cc.comm_no where cc.user_id = u.user_id)  productCount
		from user_info u
		where user_id = #{userId}
	</select>

	<select id="selectByUserIdCount" resultType="int" parameterType="map">
		select
		count(c.comm_no)
		from community c
		where c.user_id = #{userId}
	</select>

	<select id="selectByUserId" resultType="community" parameterType="map">
		<include refid="commSelect"></include>
		from community c
		left join user_info u on c.user_id = u.user_id
		where c.user_id = #{userId}
		order by c.comm_date desc
		limit #{startLimit}, #{sizeLimit}
	</select>

	<select id="selectByFollow" resultType="community" parameterType="map">
		<include refid="commSelect"></include>
		from community c
		left join user_info u on c.user_id = u.user_id
		where c.user_id in (select uf.user_id2 from user_follow uf where uf.user_id = #{userId})
		order by c.comm_date desc
		limit #{startLimit}, #{sizeLimit}
	</select>
	<select id="selectByFollowCount" resultType="int" parameterType="String">
		select
		count(*)
		from community c
		left join user_info u on c.user_id = u.user_id
		where c.user_id in (select uf.user_id2 from user_follow uf where uf.user_id = #{userId})
	</select>

	<insert id="insertComm" parameterType="community" useGeneratedKeys="true" keyColumn="commNo" keyProperty="commNo">
		insert into community values(
			null,
			#{userId},
			#{commTitle},
			#{commContents},
			#{commCategory},
			0,
			now(),
			null,
			1
		)
	</insert>

	<select id="checkTagNameDuplicated" parameterType="String" resultType="int">
		select ifnull(max(tag_id), -1) from tag
		where tag_name = #{tagName}
	</select>

	<insert id="insertTag" parameterType="tag" useGeneratedKeys="true" keyColumn="tagId" keyProperty="tagId">
		insert into tag values(null, #{tagName})
	</insert>

	<insert id="insertCommTag" parameterType="java.util.List">
		insert into comm_tag values
		<foreach collection="list" item="i" separator=",">
			(
			#{i.commNo},
			#{i.tagId}
			)
		</foreach>
	</insert>

	<insert id="insertCommTagProduct" parameterType="java.util.List">
		insert into community_tag_product(comm_no, product_id)
		values
		<foreach collection="list" item="i" separator=",">
			(
			#{i.commNo},
			#{i.productId}
			)
		</foreach>
	</insert>

	<insert id="insertImgThumb" parameterType="java.util.List">
		insert into img_thumb values
		<foreach collection="list" item="i" separator=",">
			(
			null,
			#{i.commNo},
			null,
			#{i.imgThumbUrl},
			#{i.imgThumbStore}
			)
		</foreach>
	</insert>
</mapper>
